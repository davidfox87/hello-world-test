
# configure upstream
upstream docker-jenkins {
    # note we can refer to jenkins through the service name because everything is on the same
    # docker network
    server jenkins:8080; # jenkins is listening on port 8080

    # limit the number of idle connections to this upstream
    keepalive 16;
}
# After defining the upstream servers, we need to tell NGINX
# how to listen and how to react to requests.
server {
    listen 80;

    server_name "";

    # Jenkins will use custom headers for CSRF protection
    # whithout this directive NGINX will drop those headers
    #ignore_invalid_headers off;

    location / {
        # clients connect to reverse proxy, NGINX has access to application backend server.
        proxy_pass http://docker-jenkins; # tell nginx where to route the incoming request. Forward request to destination (destination is the jenkins server sitting behind firewall)
        proxy_redirect     default;
        # we want to connect to Jenkins via HTTP 1.1 with keep-alive connections
        proxy_http_version 1.1;

        # has to be copied from server block, 
        # since we are defining per-location headers, and in 
        # this case server headers are ignored
        proxy_set_header Host $http_host; # NGINX replaces host header with var $host when it sends a request to backend
        proxy_set_header X-Real-IP $remote_addr; # tell the backend that this was the IP of the incoming request
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # no Connection header means keep-alive
        proxy_set_header Connection "";

        # Jenkins will use this header to tell if the connection
        # was made via http or https
        proxy_set_header X-Forwarded-Proto $scheme;

        # increase body size (default is 1mb)
        client_max_body_size       10m;

        # increase buffer size, not sure how this impacts Jenkins, but it is recommended
        # by official guide
        client_body_buffer_size    128k;

        # block below is for HTTP CLI commands in Jenkins
        
        # increase timeouts for long-running CLI commands (default is 60s)
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        # disable buffering
        proxy_buffering            off;
        proxy_request_buffering    off; 
    }

    root /usr/share/nginx/html;
    try_files /index.html =404;

    expires -1;

    sub_filter_once off;
    sub_filter 'server_hostname' '$hostname';
    sub_filter 'server_address' '$server_addr:$server_port';
    sub_filter 'server_url' '$request_uri';
    sub_filter 'server_date' '$time_local';
    sub_filter 'request_id' '$request_id';


    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }
}